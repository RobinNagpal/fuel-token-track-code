/* Autogenerated file. Do not edit manually. */

/* tslint:disable */
/* eslint-disable */

/*
  Fuels version: 0.82.0
  Forc version: 0.49.3
  Fuel-Core version: 0.22.1
*/

import type {
  BigNumberish,
  BN,
  BytesLike,
  Contract,
  DecodedValue,
  FunctionFragment,
  Interface,
  InvokeFunction,
} from 'fuels';

import type { Enum } from "./common";

export type IdentityInput = Enum<{ Address: AddressInput, ContractId: ContractIdInput }>;
export type IdentityOutput = Enum<{ Address: AddressOutput, ContractId: ContractIdOutput }>;

export type AddressInput = { value: string };
export type AddressOutput = AddressInput;
export type ContractIdInput = { value: string };
export type ContractIdOutput = ContractIdInput;

interface TokenTrackAbiInterface extends Interface {
  functions: {
    burn_from_address: FunctionFragment;
    burn_from_contract: FunctionFragment;
    get_balance: FunctionFragment;
    mint_to_address: FunctionFragment;
    mint_to_contract: FunctionFragment;
    transfer_coins_to_address: FunctionFragment;
    transfer_coins_to_contract: FunctionFragment;
  };

  encodeFunctionData(functionFragment: 'burn_from_address', values: [AddressInput, BigNumberish]): Uint8Array;
  encodeFunctionData(functionFragment: 'burn_from_contract', values: [ContractIdInput, BigNumberish]): Uint8Array;
  encodeFunctionData(functionFragment: 'get_balance', values: [IdentityInput]): Uint8Array;
  encodeFunctionData(functionFragment: 'mint_to_address', values: [AddressInput, BigNumberish]): Uint8Array;
  encodeFunctionData(functionFragment: 'mint_to_contract', values: [ContractIdInput, BigNumberish]): Uint8Array;
  encodeFunctionData(functionFragment: 'transfer_coins_to_address', values: [BigNumberish, AddressInput, AddressInput]): Uint8Array;
  encodeFunctionData(functionFragment: 'transfer_coins_to_contract', values: [BigNumberish, ContractIdInput, ContractIdInput]): Uint8Array;

  decodeFunctionData(functionFragment: 'burn_from_address', data: BytesLike): DecodedValue;
  decodeFunctionData(functionFragment: 'burn_from_contract', data: BytesLike): DecodedValue;
  decodeFunctionData(functionFragment: 'get_balance', data: BytesLike): DecodedValue;
  decodeFunctionData(functionFragment: 'mint_to_address', data: BytesLike): DecodedValue;
  decodeFunctionData(functionFragment: 'mint_to_contract', data: BytesLike): DecodedValue;
  decodeFunctionData(functionFragment: 'transfer_coins_to_address', data: BytesLike): DecodedValue;
  decodeFunctionData(functionFragment: 'transfer_coins_to_contract', data: BytesLike): DecodedValue;
}

export class TokenTrackAbi extends Contract {
  interface: TokenTrackAbiInterface;
  functions: {
    burn_from_address: InvokeFunction<[target: AddressInput, amount: BigNumberish], void>;
    burn_from_contract: InvokeFunction<[target: ContractIdInput, amount: BigNumberish], void>;
    get_balance: InvokeFunction<[addr: IdentityInput], BN>;
    mint_to_address: InvokeFunction<[recipient: AddressInput, amount: BigNumberish], void>;
    mint_to_contract: InvokeFunction<[recipient: ContractIdInput, amount: BigNumberish], void>;
    transfer_coins_to_address: InvokeFunction<[coins: BigNumberish, from: AddressInput, target: AddressInput], void>;
    transfer_coins_to_contract: InvokeFunction<[coins: BigNumberish, from: ContractIdInput, target: ContractIdInput], void>;
  };
}
